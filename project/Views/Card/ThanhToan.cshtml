@model IEnumerable<project.ViewModels.CartItem>
@{
    ViewData["Title"] = "Thanh Toán";
}

<!-- Single Page Header start -->
<div class="container-fluid page-header py-5">
    <h1 class="text-center text-white display-6">Checkout</h1>
    <ol class="breadcrumb justify-content-center mb-0">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Pages</a></li>
        <li class="breadcrumb-item active text-white">Checkout</li>
    </ol>
</div>
<!-- Single Page Header End -->
<!-- Checkout Page Start -->
<div class="container-fluid py-5">
    <div class="container py-5">
        <h1 class="mb-4">Billing details</h1>
       
            <div class="row g-5">
                <form asp-action="ThanhToan" asp-controller="Card">
                    <div class="col-md-12 col-lg-6 col-xl-7">
                        @* check *@  
                           <div class="form-check my-3">
                            <input type="checkbox" class="form-check-input" name="GiongKhachHang" id="GiongKhachHang" value="false">
                        <label class="form-check-label" for="GiongKhachHang">Giống thông tin khách hàng?</label>
                        </div>
                        @* Tên người nhận *@  
                         <div class="form-item delivery-info">
                            <label class="form-label my-3">Người nhận hàng<sup>*</sup></label>
                        <input type="text" name="HoTen" class="form-control">
                        </div>
                        @* Địa chỉ giao hàng *@  
                         <div class="form-item delivery-info">
                            <label class="form-label my-3">Địa chỉ <sup>*</sup></label>
                        <input type="text" name="DiaChi" class="form-control" />
                        </div>
                        @* điện thoại *@  
                          <div class="form-item delivery-info">
                            <label class="form-label my-3">Điện thoại<sup>*</sup></label>
                        <input type="text" name="DienThoai" class="form-control">
                        </div>

                        <hr>

                        <div class="form-item">
                            <textarea name="GhiChu" class="form-control" spellcheck="false" cols="30" rows="11" placeholder="Ghi chú"></textarea>
                        </div>
                        @* btn đặt hàng *@
                        <div class="row align-items-center justify-content-center pt-4">
                            <button type="submit" class="btn border-secondary py-3 px-4 text-uppercase w-100 text-primary">Đặt hàng</button>
                        </div>
                    <div id="paypal-button-container" class="mt-4"></div>
                    </div>
                </form>
                <div class="col-md-12 col-lg-6 col-xl-5">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">Products</th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Price</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <th scope="row">
                                            <div class="d-flex align-items-center mt-2">
                                                <img src="/Hinh/HangHoa/@item.HinhAnh" class="img-fluid rounded-circle" style="width: 90px; height: 90px;" alt="">
                                            </div>
                                        </th>
                                        <td class="py-5">@item.TenHangHoa</td>
                                        <td class="py-5">$@item.DonGia</td>
                                        <td class="py-5">@item.SoLuong</td>
                                        <td class="py-5">$@item.ThanhTien</td>

                                    </tr>

                                }

                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="3"></td>
                                    <td class="py-5">
                                        <p class="mb-0 text-dark py-3">Subtotal</p>
                                    </td>
                                    <td class="py-5">
                                        <div class="py-3 border-bottom border-top">
                                            <p class="mb-0 text-dark">$ @Model.Sum(p => p.ThanhTien).ToString("#,##0.00")</p>
                                        </div>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
         </div>
            </div>
        
    </div>
</div>
<!-- Checkout Page End -->
@section Scripts{
    <script src="https://www.paypal.com/sdk/js?client-id=@ViewBag.paypalClientId&components=buttons"></script>

    <script>
                 $(document).ready(function ()
        {
            $("#GiongKhachHang").change(function(){
                if($(this).prop("checked")){
                    $(this).val(true);
                    $(".delivery-info").addClass("d-none");
                }
                else{
                    $(this).val(false);
                     $(".delivery-info").removeClass("d-none");
                }
            });
        });

                paypal.Buttons({
               style: {
          shape: 'pill', // Có thể thêm các style khác
        layout: 'vertical',
        color: 'gold',
        label: 'paypal'
        },

                 async createOrder(data, actions) {
            try {
                const response = await fetch("/Card/create-paypal-order", {
                    method: "POST", // Sử dụng POST thay cho "post" để đồng nhất
                    headers: {
                        // Thêm header này để đảm bảo server hiểu request
                        "Content-Type": "application/json",
                    }
                });

                // Nếu response không OK, phân tích lỗi và throw
                if (!response.ok) {
                    const errorData = await response.json();
                    // Ném ra một lỗi với thông điệp từ server
                    throw new Error(errorData.message || 'Lỗi không xác định từ server.');
                }

                const order = await response.json();

                // Trả về ID của đơn hàng
                return order.id;

            } catch (error) {
                console.error("Lỗi khi tạo đơn hàng PayPal:", error);
                alert("Không thể tạo đơn hàng. Vui lòng thử lại. Lỗi: " + error.message);
                // return Promise.reject(error); // Báo lỗi cho PayPal SDK
            }
        },

        // Chuyển đổi onApprove sang async/await VÀ SỬA LẠI CHO ĐÚNG
               async onApprove(data, actions) {
            try {
                // Gửi orderID trên URL và dùng phương thức POST
                const response = await fetch(`/Card/capture-paypal-order?orderId=${data.orderID}`, {
                    method: "POST"
                    
                });

                if (!response.ok) {
                    
                    let errorMessage = `Lỗi từ server: ${response.status}`;
                    const contentType = response.headers.get("content-type");
                    if (contentType && contentType.includes("application/json")) {
                        const errorData = await response.json();
                        errorMessage = errorData.message || JSON.stringify(errorData);
                    } else {
                        errorMessage = await response.text();
                    }
                    throw new Error(errorMessage);
                }

                // Nếu thành công, chuyển hướng
                window.location.href = "/Card/PaymentSuccess";

            } catch (error) {
                console.error("Lỗi khi xác nhận thanh toán PayPal:", error);
                alert("Không thể xác nhận thanh toán. Vui lòng liên hệ hỗ trợ. Lỗi: " + error.message);
            }
        }
        }).render('#paypal-button-container');
    </script>
}